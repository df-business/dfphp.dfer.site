/**
 * +----------------------------------------------------------------------
 * | QuiGrid
 * 
 * view df
 *
 * <link href="/js/modernBlue/style.css" rel="stylesheet" type="text/css" id="theme" themeColor="modernBlue" positionTarget="positionContent" selInputHeight="28" selButtonWidth="29" defaultSelWidth="160" fileBtnWidth="60" defaultFileInputWidth="222" defaultGridHeaderHeight="32" defaultGridRowHeight="32" defaultFontSize="14" defaultPageSelWidth="55" defaultFilterItemHeight="28" defaultFontFamily="微软雅黑" />
 * <script src="~/js/framework.js" ></script>
 * <script src="/js/quiGrid.js"></script>
 * <div id="List"></div>
 * c#
 * public ActionResult df() {return View();}
 * id：List
 * url: '/Order/Order/GetList'
 * sort: Id
 * var _coumns = [{name: 'cardId', display: "卡号", isAllowHide: false, width: "20%", render: function (rowData, rowindex, value, column) { return '<a id=' + rowData.ID + '>' + value + '</a>'; }},{ name: 'money', display: "提现金额(元)", isAllowHide: false, width: "10%" }];
 * click:false   //默认简单点击事件
 * c#	
 * public JsonResult GetList(){ var json = new df.asp_net.json();
 * json.rows = db.fxlog.AsNoTracking().Select(v => v).Where(p => p.ID > 0 & p.cardId.Contains(Name)).ToList(); //linq
 * json.rows = SqlHelper.ExecuteDataset(WebConfig.HaiQiConnStrWebCfg, CommandType.Text, sql).Tables[0].ToList();    //Sql Select
 * return Json(json, JsonRequestBehavior.AllowGet);}
 * 
 * +----------------------------------------------------------------------
 *                                            ...     .............
 *                                          ..   .:!o&*&&&&&ooooo&; .
 *                                        ..  .!*%*o!;.
 *                                      ..  !*%*!.      ...
 *                                     .  ;$$!.   .....
 *                          ........... .*#&   ...
 *                                     :$$: ...
 *                          .;;;;;;;:::#%      ...
 *                        . *@ooooo&&&#@***&&;.   .
 *                        . *@       .@%.::;&%$*!. . .
 *          ................!@;......$@:      :@@$.
 *                          .@!   ..!@&.:::::::*@@*.:..............
 *        . :!!!!!!!!!!ooooo&@$*%%%*#@&*&&&&&&&*@@$&&&oooooooooooo.
 *        . :!!!!!!!!;;!;;:::@#;::.;@*         *@@o
 *                           @$    &@!.....  .*@@&................
 *          ................:@* .  ##.     .o#@%;
 *                        . &@%..:;@$:;!o&*$#*;  ..
 *                        . ;@@#$$$@#**&o!;:   ..
 *                           :;:: !@;        ..
 *                               ;@*........
 *                       ....   !@* ..
 *                 ......    .!%$! ..     | AUTHOR: dfer
 *         ......        .;o*%*!  .       | EMAIL: df_business@qq.com
 *                .:;;o&***o;.   .        | QQ: 3504725309
 *        .;;!o&****&&o;:.    ..          | WEBSITE: http://www.dfer.site
 * +----------------------------------------------------------------------
 *
 */

class QuiGrid extends Common {

    constructor() {
        super();
        console.log("DfTools", "QuiGrid", "加载完成");
    }

    /**
     * 精简版qui（只用来显示数据）
     * @param {Object} id
     * @param {Object} url
     * @param {Object} _columns
     */
    quiPure(id, url, _columns) {
        var _menu;
        $(function() {
            this._List = $("#" + id).quiGrid({ //qui主程序
                url: url,
                rownumbers: true,
                checkbox: false,
                height: '100%',
                width: "100%",
                pageSize: 20, //20条每页
                pageSizeOptions: [10, 20, 30, 40, 50],
                percentWidthMode: true,
                columns: _columns,
            });
        })
    }

    /**
     * 复杂版qui（带有点击事件）
     * qui("List", '/sys/master/GetList', "id", [{ name: 'MasterName', display: "账户昵称", isAllowHide: false, width: "20%" }]);  //click空置则代表该参数为false
     * mem = { items: [{ text: "add", iconClass: "icon_add", click: quiX.Add }, { line: true }, { text: "df", iconClass: "icon_user_worker", click: "df" }, { line: true }] };  //mem代表顶部菜单的内容
     * menujson = [{ "text": "删除", "icon": "icon_delete", "click": "del" }, { "text": "编辑", "icon": "icon_edit", "click": "edit" }];  //左键、右键菜单
     * @param {Object} id
     * @param {Object} url
     * @param {Object} sort
     * @param {Object} _columns
     * @param {Object} click
     * @param {Object} mem
     */
    qui(id, url, sort, _columns, click, mem) {
        var _menu;
        quiX = new quiC;
        if (mem == "" || mem == undefined)
            mem = {
                items: [{
                    text: "add",
                    iconClass: "icon_add",
                    click: quiX.Add
                }, {
                    line: true
                }, {
                    text: "df",
                    iconClass: "icon_user_worker",
                    click: "df"
                }, {
                    line: true
                }]
            };
        $(function() {
            //qui主程序
            this._List = $("#" + id).quiGrid({
                //  whenRClickToSelect: true,
                url: url,
                //sortName: "'" + sort + "'",
                rownumbers: true,
                checkbox: false,
                height: '100%',
                width: "100%",
                pageSize: 20, //20条每页
                pageSizeOptions: [10, 20, 30, 40, 50],
                percentWidthMode: true,
                columns: _columns,
                toolbar: mem, //顶部菜单
                onContextmenu: function(parm, e) {
                    if (_menu != undefined)
                        _menu.show({
                            top: e.pageY,
                            left: e.pageX
                        });
                    return false;
                }
            });
        })

        /**
         * 菜单内容
         */
        if (menujson == "" || menujson == undefined)
            menujson = [{
                "text": "删除",
                "icon": "icon_delete",
                "click": "del"
            }, {
                "text": "编辑",
                "icon": "icon_edit",
                "click": "edit"
            }];

        if (click == true) {
            //复杂点击事件

            // ********************** 右键菜单 START **********************
            InitRowContextMenu();

            function InitRowContextMenu() {
                var a = [];
                if (menujson.length == 0) {
                    a.push({
                        'id': "",
                        'text': "df",
                        iconClass: 'icon_delete'
                    });
                    //当前操作员无列表操作权限
                } else {
                    for (var i = 0; i < menujson.length; i++) {
                        a.push({
                            'id': menujson[i].click,
                            'text': menujson[i].text,
                            'click': itemclick
                        });
                    }
                }
                _menu = $.rightClickMenu({
                    width: 155,
                    items: a
                });
            };

            function itemclick(item, i) {
                quiX = new quiC;
                quiX.MemListColumnAction(item.id);
            }
            // **********************  右键菜单 END  **********************

            // ********************** 左键弹窗 START **********************

            $(function() { //在页面加载完之后执行
                $('.popupMenu_link').live('click', function() { //根据元素class绑定事件
                    $(this).find('div').remove(); //删除元素
                    if ($(this).find('div').size() === 1) return; //存在则跳出
                    $(this).append(iniPop()).find('.popupMenu_con').bind('mouseleave', function() {
                        $(this).hide();
                    }); //绑定鼠标事件
                    $(this).find('div').show(); //显示元素
                    var ost = $(this).find('div').offset(); //获取元素位置
                    $(this).find('div').offset({
                        left: ost.left - 87
                    }); //设置元素位置
                });
            });

            function iniPop() {
                var html = '<div class="popupMenu_con icon_con" style=" margin-right: 0;">';
                for (var i = 0; i < menujson.length; i++) {
                    html +=
                        '<a style="color:#06c;text-decoration:none;" href=\'javascript:quiX=new quiC;quiX.MemListColumnAction("' +
                        menujson[i].click + '");\'><span class="' + menujson[i].icon + '">' + menujson[i].text +
                        '</span></a>';
                }
                return html + '</div>';
            }
            _columns.push({ //数组添加一列
                'display': "操作",
                'width': "50",
                'render': function(rowData, rowindex, value, column) {
                    return '<div class="popupMenu_link arrow border white_bg" ><a style="color:#06c;text-decoration:none;" href="javascript:;">' +
                        "操作" + '</a></div>';
                }
            });
            // **********************  左键弹窗 END  **********************

        } else {

            // ********************** 简单的点击事件 START **********************

            _columns.push({
                name: 'sh',
                display: "状态",
                width: "10%",
                render: function(rowdata, rowindex, value, column) {
                    var val2 = "";
                    switch (value) {
                        case 0:
                            val2 = "待审核";
                            break;
                        case 1:
                            val2 = "审核通过";
                            break;
                        case 2:
                            val2 = "审核失败";
                            break;
                    }
                    return val2;
                }
            });

            _columns.push({
                'display': '通过审核',
                'width': "10%",
                render: function(rowData, rowindex, value, column) {
                    if (rowData.sh == 1)
                        return '<a style="color:#06c;text-decoration:none;" href="javascript:void(0);">已审核</a>';
                    else
                        return '<div class="popupMenu_link arrow border white_bg" ridx = ' + rowindex +
                            '><a style="color:#06c;text-decoration:none;" href="javascript:quiX=new quiC;quiX.tg(\'' +
                            rowData.ID + '\',\'' + rowData.data + '\',\'' + rowData.q + '\',\'' +
                            rowData
                            .m + '\',\'' + rowData.AllotCode + '\',\'' + rowData.OutShop + '\',\'' +
                            rowData
                            .InShop + '\',\'' + rowData.Remark + '\');">通过</a></div>';
                }
            });

            _columns.push({
                'display': '编辑',
                'width': "10%",
                render: function(rowData, rowindex, value, column) {
                    return '<div class="popupMenu_link arrow border white_bg" ridx = ' + rowindex +
                        '><a style="color:#06c;text-decoration:none;" href="javascript:quiX=new quiC;quiX.AlertWeb(\'' +
                        rowindex + '\');">编辑</a></div>';
                }
            });

            // **********************  简单的点击事件 END  **********************
        }
    }

    /**
     * 包含了qui里需要调用的函数
     */
    quiC() {
        //qui弹窗里的点击事件
        this.MemListColumnAction = function(id) {
            var row = this._List.getSelectedRow(); //获取当前选中的行的数据
            if (row == null) return;
            switch (id) {
                case "edit":
                    //修改信息
                    key = 9901; //memlistPage.ModelFn("Member.MemRegister");
                    if (row.id != undefined) {
                        //页面跳转
                        top.om(9, "/qc/gz/?id=" + row.id);
                    } else if (row.ID != undefined) {
                        //网页弹窗
                        _diag = new Dialog();
                        _diag.Title = "df";
                        _diag.Width = 500;
                        _diag.Height = 400;
                        _diag.URL = '/Member/BusinessAdjust/MemPoint?isLayer=1&id=' + row.Id;
                        _diag.show();

                    } else
                        write(row + " →_→null");
                    break;
                case "del":
                    //删除
                    top.Dialog.confirm("删除？", function() {
                        $.post('/goods/StockAppropriation/del', {
                            id: row.ID
                        }, function(json) {
                            top.alert(json.msg);
                            quiX = new quiC;
                            quiX.refresh();
                        });
                    });

                    break;
                default:
            }
        }

        this.Add = function() {
            console.log("add");
            _diag = new Dialog();
            _diag.Title = "df";
            _diag.Width = 500;
            _diag.Height = 400;
            _diag.URL = '/df/df/ArEdi';
            _diag.show();
        }

        this.tg = function(ID, data, q, m, AllotCode, OutShop, InShop, Remark) {
            UrlPost("/Goods/StockAppropriation/TG", {
                ID: ID,
                data: data,
                q: q,
                m: m,
                AllotCode: AllotCode,
                OutShop: OutShop,
                InShop: InShop,
                Remark: Remark
            }, [function() {
                top.alert('已完成调拨');
                this._List.loadData();
            }, function(json) {
                if (isNullOrEmpty(json.msg))
                    top.alert('调拨出错');
                else top.alert(json.msg);
            }]);
        }


        /**
         * 刷新qui
         * 可以跨框架调用，比如“quix = new top.quiC; quix.refresh();”
         * 
         */
        this.refresh = function() {
            this._List.loadData();
        }

        /**
         * 用弹窗加载网页
         * @param {Object} row
         */
        this.AlertWeb = function(row) {
            var _diag;
            var row = this._List.getRow(row); //获取指定行的数据
            if (row == null) {
                top.Dialog.alert("null"); //http://localhost:5740/hqui/libs/js/dialog.js?v=1
            } else {
                _diag = new top.Dialog();
                _diag.Title = lan.zx;
                _diag.Width = 300;
                _diag.Height = 150;
                _diag.URL = "/Setup/Shop/ShopEdit?id=" + row.shopid;
                _diag.show();
            }
        }

        /**
         * 简易用弹窗加载网页
         * @param {Object} title
         * @param {Object} src
         */
        this.PureAlertWeb = function(title, src) {
            var _diag;
            _diag = new top.Dialog();
            _diag.Title = title;
            _diag.Width = 800;
            _diag.Height = 750;
            _diag.URL = src;
            _diag.show();

        }

    }

    /**
     * qui传递form里的内容到绑定的url里头
     * https://github.com/citnvillareal/serializeObject
     * <script src="/js/serializeObject.js"></script>   //将form的内容转化为url参数
     * <form id="forms">
     */
    quiPost(form_id) {
        this._List.setOptions({
            params: $('#' + form_id).serializeObject()
        });
        this._List.setNewPage(1);
        this._List.loadData();
    };

    /**
     * array = { CardID: $("#CardID").val() };
     * @param {Object} array
     */
    quiEasyPost(array) {
        this._List.setOptions({
            params: array
        });
        this._List.setNewPage(1);
        this._List.loadData();
    };

}